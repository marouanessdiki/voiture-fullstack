services:
  # Database
  mariadb:
    image: mariadb:11.4
    container_name: voiture-mariadb
    ports:
      - "33062:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root1234
      - MYSQL_DATABASE=compagnie
      - MYSQL_USER=voiture
      - MYSQL_PASSWORD=voiture123
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - voiture-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend Spring Boot Application
  backend:
    build:
      context: ./SpringDataRest
      dockerfile: Dockerfile
    container_name: voiture-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/compagnie
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root1234
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.mariadb.jdbc.Driver
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,prometheus,metrics
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
    networks:
      - voiture-network
    depends_on:
      - mariadb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend React Application
  frontend:
    build:
      context: ./voiture-frontend
      dockerfile: Dockerfile
    container_name: voiture-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://backend:8080
    networks:
      - voiture-network
    depends_on:
      - backend
    restart: unless-stopped

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: voiture-prometheus
    ports:
      - "19090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - voiture-network
    restart: unless-stopped

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: voiture-grafana
    ports:
      - "13000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - voiture-network
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  mariadb_data:
  prometheus_data:
  grafana_data:

networks:
  voiture-network:
    driver: bridge
